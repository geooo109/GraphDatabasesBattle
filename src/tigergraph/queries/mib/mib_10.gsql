/*
MATCH (m:Message {id : 481036473215})<-[:REPLY_OF]-(c:Comment)-[:HAS_CREATOR]->(p:Person)- [:STUDY_AT] -> (uni:University)
RETURN   
  CASE uni
    WHEN null THEN ""
    ELSE uni.name END as UniversityName
*/

USE GRAPH ldbc_snb
DROP QUERY mib_10

CREATE QUERY mib_10(STRING messageIdInput) FOR GRAPH ldbc_snb { 
  TYPEDEF TUPLE< DATETIME commentCreationDate, STRING universityName> resInfo;
  ListAccum<resInfo> @@res;
  SetAccum<STRING> @@seed;
  SumAccum<INT> @friendId;
  
  @@seed += messageIdInput;
  vMessage = to_vertex_set(@@seed, "Comment");

  IF vMessage.size() == 0 THEN
    vMessage = to_vertex_set(@@seed, "Post");
  
    vComment = 
      SELECT c
      FROM vMessage:vm-(Comment_REPLY_OF_Post_REVERSE:e)->Comment:c;
  
    vPersonCreator = 
      SELECT pc
      FROM vComment:cv-(Comment_HAS_CREATOR_Person:e)->Person:pc;
    
    vUniversity = 
      SELECT u
      FROM vPersonCreator:t-(Person_STUDY_AT_University:e)->University:u
      ORDER BY u.name;
  
    PRINT vUniversity[vUniversity.name];
  
  ELSE
    vComment = 
      SELECT c
      FROM vMessage:vm-(Comment_REPLY_OF_Comment_REVERSE:e)->Comment:c;
  
    vPersonCreator = 
      SELECT pc
      FROM vComment:cv-(Comment_HAS_CREATOR_Person:e)->Person:pc;
    
    vUniversity = 
      SELECT u
      FROM vPersonCreator:t-(Person_STUDY_AT_University:e)->University:u
      ORDER BY u.name;
  
    PRINT vUniversity[vUniversity.name];

  END;
  
}

INSTALL QUERY mib_10