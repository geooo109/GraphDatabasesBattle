//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//BI 13 query description is on page 71 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf

USE GRAPH ldbc_snb
DROP QUERY bi_13

CREATE QUERY bi_13(STRING countryName) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<STRING tag_name, INT popularity> tagInfo;
  TYPEDEF TUPLE<INT year, INT month, JSONARRAY popularTags> tagStats;

  GroupByAccum<INT year, INT month, GroupByAccum<STRING tagName, SumAccum<INT> popularity> tagGroup> @@monthlyGroup;
  HeapAccum<tagInfo>(5, popularity DESC, tag_name ASC) @@tagInfoTop;
  HeapAccum<tagStats>(100, year DESC, month ASC) @@tagStatsTop;

  STRING jsonStr;
  bool needComma;

  vCountry = { Country.* };
	vCountry =
	  SELECT v
	  FROM vCountry:v
	  WHERE v.name == countryName;

  vMessage = 
    SELECT t
    FROM vCountry:s-((Comment_IS_LOCATED_IN_Country_REVERSE|Post_IS_LOCATED_IN_Country_REVERSE):e)->(Comment|Post):t;

  vMessage = 
    SELECT s
    FROM vMessage:s-((Comment_HAS_TAG_Tag|Post_HAS_TAG_Tag):e)->Tag:t
    ACCUM @@monthlyGroup += (year(s.creationDate), month(s.creationDate) -> (t.name -> 1));

  FOREACH (y,m,tg) IN @@monthlyGroup DO
    @@tagInfoTop.clear();
    // put tags into heap to get 5 most popular tags
    FOREACH t IN tg DO
      @@tagInfoTop += tagInfo(t.tagName, t.popularity);
    END;

    // put 5 most popular tags into JSONARRAY
    jsonStr = "[";
    needComma = False;
    FOREACH ti IN @@tagInfoTop DO
      IF needComma THEN
        jsonStr = jsonStr + ",";
      ELSE
        needComma = True;
      END;
      jsonStr = jsonStr + "[\"" + ti.tag_name + "\"," + to_string(ti.popularity) + "]";
    END;
    jsonStr = jsonStr + "]";
    @@tagStatsTop += tagStats(y, m, parse_json_array(jsonStr));
  END;

  PRINT @@tagStatsTop;
}

INSTALL QUERY bi_13