//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//IC 1 query description is on page 32 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf

USE GRAPH ldbc_snb
DROP QUERY ic_1

CREATE QUERY ic_1(Set<VERTEX<Person>> personId, STRING firstName) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<VERTEX<Person> v, INT distanceFromPerson, STRING lastName, INT id> friendInfo;
  TYPEDEF TUPLE<STRING orgName, INT orgYear, STRING orgPlace> org;

  HeapAccum<friendInfo>(20, distanceFromPerson ASC, lastName ASC, id ASC) @@friendInfoTop;
  SetAccum<VERTEX<Person>> @@friendAll;
  SetAccum<org> @comp, @univ;
  SumAccum<STRING> @cityName;
  SumAccum<INT> @distance;
  MapAccum<INT, INT> @personInfo;
  MapAccum<INT, SetAccum<org>> @@compInfo, @@univInfo;

  OrAccum @visited = False;
  INT i = 0;

  vPerson = { personId };

  WHILE i < 3 DO
    vPerson =
      SELECT t
      FROM vPerson:s-((Person_KNOWS_Person|Person_KNOWS_Person_REVERSE):e)->Person:t
      WHERE t.@visited == False
      ACCUM
        s.@visited += True,
        t.@visited += True,
        t.@distance = (i+1)
      POST-ACCUM
        CASE WHEN t.firstName == firstName THEN
          @@friendInfoTop += friendInfo(t, t.@distance, t.lastName, t.id)
        END;

    IF @@friendInfoTop.size() >= 20 THEN BREAK; END;
    i = i + 1;
  END;

  FOREACH f IN @@friendInfoTop DO
    @@friendAll += f.v;
  END;

  vFriend = { @@friendAll };
  vFriend =
    SELECT s
    FROM vFriend:s-(Person_IS_LOCATED_IN_City:e)->City:t
    ACCUM s.@cityName = t.name;

  vUniv =
    SELECT t
    FROM vFriend:s-(Person_STUDY_AT_University:e)->University:t
    ACCUM t.@personInfo += (s.id -> e.classYear);

  vUniv =
    SELECT s
    FROM vUniv:s-(University_IS_LOCATED_IN_City:e)->City:t
    ACCUM
      FOREACH (pId, orgYear) in s.@personInfo DO
        @@univInfo += (pId -> org(s.name, orgYear, t.name))
      END;

  vComp =
    SELECT t
    FROM vFriend:s-(Person_WORK_AT_Company:e)->Company:t
    ACCUM t.@personInfo += (s.id -> e.workFrom);

  vComp =
    SELECT s
    FROM vComp:s-(Company_IS_LOCATED_IN_Country:e)->Country:t
    ACCUM
      FOREACH (pId, orgYear) in s.@personInfo DO
        @@compInfo += (pId -> org(s.name, orgYear, t.name))
      END;

  vFriend =
    SELECT v
    FROM vFriend:v
    ACCUM
      v.@univ += @@univInfo.get(v.id),
      v.@comp += @@compInfo.get(v.id)
    ORDER BY v.@distance ASC, v.lastName ASC, v.id ASC;

  PRINT vFriend[
      vFriend.id AS friendId,
      vFriend.lastName AS friendLastName,
      vFriend.@distance AS distanceFromPerson,
      vFriend.birthday AS friendBirthday,
      vFriend.creationDate AS friendCreationDate,
      vFriend.gender AS friendGender,
      vFriend.browserUsed AS friendBrowserUsed,
      vFriend.locationIP AS friendLocationIp,
      vFriend.email AS friendEmails,
      vFriend.speaks AS friendLanguages,
      vFriend.@cityName AS friendCityName,
      vFriend.@univ AS friendUniversities,
      vFriend.@comp AS friendCompanies];
}

INSTALL QUERY ic_1