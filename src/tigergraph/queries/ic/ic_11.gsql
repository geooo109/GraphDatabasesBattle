//graph schema is on page 13 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf
//IC 11 query description is on page 42 https://ldbc.github.io/ldbc_snb_docs/ldbc-snb-specification.pdf

USE GRAPH ldbc_snb
DROP QUERY ic_11

CREATE QUERY ic_11(Set<VERTEX<Person>>  personId, STRING countryName, INT workFromYear) FOR GRAPH ldbc_snb {
  TYPEDEF TUPLE<INT personId, STRING personFirstName, STRING personLastName, STRING organizationName, INT organizationWorkFromYear> friendInfo;

  ListAccum<VERTEX<Person>> @@friendAll;
  OrAccum @visited;
  OrAccum @locatedInGivenCountry;
  HeapAccum<friendInfo>(10, organizationWorkFromYear ASC, personId ASC, organizationName DESC) @@friendInfoTop;

  INT i;

  vPerson = { personId };
  WHILE i < 2 DO
    vPerson = 
      SELECT t
      FROM vPerson:s-((Person_KNOWS_Person|Person_KNOWS_Person_REVERSE):e)->Person:t
      WHERE t.@visited == False
      ACCUM 
        s.@visited += True,
        t.@visited += True,
        @@friendAll += t;

    i = i + 1;
  END;

  vCompany = { Company.* };
  findCompanyInGivenCountry = 
    SELECT t
    FROM vCompany:s-(Company_IS_LOCATED_IN_Country:e)->Country:t
    WHERE t.name == countryName
    ACCUM s.@locatedInGivenCountry += True;

  vFriend = { @@friendAll };
  aggFriend = 
    SELECT t
    FROM vFriend:s-(Person_WORK_AT_Company:e)->Company:t
    WHERE e.workFrom < workFromYear
    AND t.@locatedInGivenCountry == True
    ACCUM @@friendInfoTop += friendInfo(s.id, s.firstName, s.lastName, t.name, e.workFrom);

  PRINT @@friendInfoTop;
}

INSTALL QUERY ic_11